### GPU 版 Dockerfile ###
FROM nvidia/cuda:12.2.2-devel-ubuntu22.04

# 必要なツールのインストール
RUN apt update && apt install -y \
    tar gzip unzip curl git python3 \
    build-essential clang cmake ninja-build \
    gdb lldb valgrind \
    libicu-dev jq procps net-tools iproute2 \
    x11-apps x11-utils x11-xserver-utils \
    fonts-noto \
    ocl-icd-opencl-dev clinfo \
    mesa-utils \
    && rm -rf /var/lib/apt/lists/*

# .NET 8 SDK のインストール
RUN curl -sSL https://dot.net/v1/dotnet-install.sh -o dotnet-install.sh && \
    bash dotnet-install.sh --channel LTS && \
    ln -s /root/.dotnet/dotnet /usr/bin/dotnet

# C++ 最新バージョンのセットアップ（C++20 / C++23 もサポート）
RUN apt-get clean && rm -rf /var/lib/apt/lists/* && apt-get update
RUN apt update && apt install -y software-properties-common && \
    apt update && add-apt-repository -y ppa:ubuntu-toolchain-r/test && \
    apt update && apt install -y g++-12 && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100

# CMake のセットアップ
RUN apt install -y cmake && \
    cmake --version

# NVIDIA Container Toolkit の設定
RUN apt install -y nvidia-container-toolkit nvidia-container-runtime && \
    rm -rf /var/lib/apt/lists/*

# nvidia-smi の動作確認（エラーを無視）
RUN if command -v nvidia-smi > /dev/null 2>&1; then nvidia-smi; else echo "nvidia-smi not found, skipping"; fi

# Google Chrome のインストール
RUN apt-get update && apt-get install -y wget gnupg \
    && wget -qO- https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor > /usr/share/keyrings/google-chrome.gpg \
    && echo "deb [signed-by=/usr/share/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# VSCode のインストール
RUN apt-get update && apt-get install -y wget gpg \
    && wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /usr/share/keyrings/packages.microsoft.gpg \
    && echo "deb [signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" | tee /etc/apt/sources.list.d/vscode.list \
    && apt-get update && apt-get install -y code \
    && rm -rf /var/lib/apt/lists/*

# 日本語フォントのインストール
RUN curl -L -o /tmp/noto-cjk-fonts.zip https://noto-website-2.storage.googleapis.com/pkgs/NotoSansCJKjp-hinted.zip && \
    mkdir -p /usr/share/fonts/noto-cjk && \
    unzip /tmp/noto-cjk-fonts.zip -d /usr/share/fonts/noto-cjk && \
    rm /tmp/noto-cjk-fonts.zip && \
    fc-cache -f -v

# Ubuntu / Debian ベースの Dockerfile
RUN apt-get update && \
    apt-get install -y dbus dbus-x11 && \
    systemctl enable dbus \
    && rm -rf /var/lib/apt/lists/*

# X11 の設定
ENV DISPLAY=host.docker.internal:0
RUN echo "export DISPLAY=host.docker.internal:0" >> /root/.bashrc

# VSCode / Chrome のプロファイル保存フォルダの作成
RUN mkdir -p /profiles/vscode /profiles/chrome

# 環境変数を設定 (NVIDIA GPU を有効化)
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility,video

# dockerchrome.sh スクリプトをコピー
COPY dockerchrome.sh /usr/local/bin/dockerchrome.sh
RUN chmod +x /usr/local/bin/dockerchrome.sh

# dockervscode.sh スクリプトをコピー
COPY dockervscode.sh /usr/local/bin/dockervscode.sh
RUN chmod +x /usr/local/bin/dockervscode.sh

# develop ユーザーを作成
RUN useradd -m -s /bin/bash develop && echo "develop:develop" | chpasswd

# sudo グループに追加（必要なら sudo をインストール）
RUN apt-get update && apt-get install -y sudo && usermod -aG sudo develop

# develop ユーザーに切り替え
USER develop
WORKDIR /home/develop/projects

# コンテナ起動時のデフォルトコマンド
CMD ["/bin/bash"]
